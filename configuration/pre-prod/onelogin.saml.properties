#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  false

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://fastweb.convy.net/preprod/convy

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
#onelogin.saml2.sp.assertion_consumer_service.url = https://convy.unyco.net/convy/FW_19/FW19SSO/acs.jsp
onelogin.saml2.sp.assertion_consumer_service.url = https://fastweb.convy.net/preprod/convy/FW_19/FW19SSO/acs.jsp

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = https://fastweb.convy.net/preprod/convy/FW_19/FW19SSO/sls.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:2.0:nameid-format:persistent

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert = -----BEGIN CERTIFICATE-----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-----END CERTIFICATE-----

# Requires Format PKCS#8   BEGIN PRIVATE KEY	     
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = -----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCdhyFFzcF2IpXC89frC9aGJxqAy9Z7uvehx9HDU7521N2vyEVDpDtORbjJ/VQE65yr/GtcNWSr8MIcQfFvb6YPLmXLQoEZ639DR4E+r3O9t17qUNdK0KLuA9G9MapulRHoaKKUVj6lRU9imVrpT5ng+nIdcoG54tfPfFuKLfpSFekVJHRCsbTXqvPbW4AzybZyb7fRfTDGOpZlulncfRA2QHfm3p3j/qiUIOh2IQTcMlvDRWrZoTTjP+fbNXcwTvBQi2P6uF1O6A50F93l9kDYaZz98gis7MRFeLAEHSlqtQfymY0Vf6KY6nqj0vZEJMaYwUD44UAzWeXMTevVLfGRAgMBAAECggEAGjDUqR6tzvaumDCDIncAJqNbPnVFlqJOGEWY/GUQyoCXUCnXzEiCvL+OWvUF0mCbFqQ79GODNqwrlden7Otu/GCuN4Z54QWczeKWXEX/FBioDQS+WtfH8xNK/K4EhGjABrhY6ZlSRpe4vG+7ZAWiU7vIG9nFNFMBJyPps1Z0I0/y+4Gz6p2Z/zLoAxtqyfuW10HVwVXMjgEWzAp5XscZMhTqWImqgW6TmeTg6tIUBXKpxMIa5KbxYzDM3BJXlUjoxyUyh1nooK2YgNmbEPAvBjnZ/zDmYNAS7y6wtBnw342f3JjsCzOz8CT+DUJUHDcyHKgZ+sx7yKJQ5pbLmCzkfQKBgQDNDmGx54+nS+HudRpLn3iWVhPnKHB9II7uSPfXFiZlRLWz7x+sF0XI/DGM8OoAkZqzbp2DJPAJynZzsJRRAZr2Yvgn60pY6pDB51KCxJaovU6aEBW75tN/InI3rU577FW60c3iAWARZ6cyue1AMD78LuhhQ1C+tghSBY6cb1avtQKBgQDEqe+tIJQxCfU4f8/0FXxUayqNlgAU/p9eMjcrCQEhpPQuK0fHwpsd+Lto/VvuGDFYr9Eazkl/rFmwqttURnq+HbcwRtezc7T49VdyFVIh/wVeMRwOVSmiSSjVTJz/42vg7PjhOWcrLwVPXgDQpJSIo4JLSUStC5SPCeIzZi6L7QKBgBZWQbgidFiSAIt8QCAKwBUITWS51/8ZY9h7JFxOsmIHqQ9vtfCGHHj3V+J1f9gOBF8VZp0ZkfhPELYrfwyP8zRxtXyLue6Tpq8opqlOBudcr8pChEuSqmlH9E8yVsFTDkeqgRXkdnWO5/yzmi+K0eGgrnmh3pLXu3JL3qwVyMidAoGAKmX8nxWD/WKJNIoRmiy7pjOIdAffsqcGUrd+v09sqAU5A28fRYjGClsihEsC87zRfq5A5YeNvvG4UGc1a+DZ+3zKjqTnQe/zFy1FkfnYwC2LybfKtahUloExRXMD8gLkshREv8GxZVT4zxiUEmc5ApBFudds7+WsPH5D/xLLfC0CgYEAsDi0AEJu0fmz+XNL7Et5i2iUd5fA8zcgwfSbt0GGyveu0SFRcJxqaahNV/LXagyAfLLZ3g1u/Hwz5ySwHL199UBDnuTNKUBqKNJzyatAZYvMUdbw9lBTaikJN5XfiI7pdiqGxMd8XS1dxq6yJ2p8Xfl0hdjRYdyexY6e22dEfaY=-----END PRIVATE KEY-----

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://logon-pre.fastweb.it:443/oam/fed

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://logon-pre.fastweb.it/oamfed/idp/samlv20

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://logon-pre.fastweb.it/oamfed/idp/samlv20

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url = https://logon-pre.fastweb.it/oamfed/idp/samlv20

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert = -----BEGIN CERTIFICATE-----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-----END CERTIFICATE-----

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint = 
# onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = true

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = true

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = true

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_messages_signed = true

# Indicates a requirement for the <saml:Assertion> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = true

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key) 
onelogin.saml2.security.sign_metadata =

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = 

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = SP Eudata 
onelogin.saml2.organization.displayname = SP Eudata for Fastweb
onelogin.saml2.organization.url = http://sp.example.com
onelogin.saml2.organization.lang = 

# Contacts
onelogin.saml2.contacts.technical.given_name = Support Fastweb Team
onelogin.saml2.contacts.technical.email_address = support@eudata.com
onelogin.saml2.contacts.support.given_name = Support Fastweb Team
onelogin.saml2.contacts.support.email_address = support@eudata.com

#Redirect SSO
sso.redirect.url = https://fastweb.convy.net/preprod/convy/static/include/interfaces/CustomerGuiAdvanced/dist/html/chatbutton.html?mode=popover&channel=video&page=/FastwebChatbot/&domain=convy.unyco.net&address=null&



